{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/home/menu.component.ts","webpack:///src/app/home/menu.component.html","webpack:///src/app/home/page-not-found.component.ts","webpack:///src/app/home/shell.component.ts","webpack:///src/app/home/shell.component.html","webpack:///src/app/home/welcome.component.ts","webpack:///src/app/home/welcome.component.html","webpack:///src/app/products/product-data.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/user/auth.service.ts","webpack:///src/app/user/login.component.ts","webpack:///src/app/user/login.component.html","webpack:///src/app/user/satate-manager/user.action.ts","webpack:///src/app/user/satate-manager/user.reducer.ts","webpack:///src/app/user/user.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","appRoutes","path","component","children","loadChildren","m","ProductModule","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","selector","templateUrl","styleUrls","AppModule","instrument","name","maxAge","logOnly","production","declarations","bootstrap","MenuComponent","router","authService","pageTitle","isLoggedIn","currentUser","userName","logout","navigate","PageNotFoundComponent","template","ShellComponent","WelcomeComponent","ProductData","products","productName","productCode","description","starRating","SharedModule","AuthService","password","isAdmin","providedIn","LoginComponent","_store","maskUserName$","select","dispatch","loginForm","valid","form","value","login","redirectUrl","navigateByUrl","cancel","checkChanged","maskUserName","initialState","getUsersFeatureState","getMaskUserName","state","userReducer","userRoutes","UserModule","forChild","forFeature","environment","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthGuard } from './user/auth-guard.service';\n\nimport { ShellComponent } from './home/shell.component';\nimport { WelcomeComponent } from './home/welcome.component';\nimport { PageNotFoundComponent } from './home/page-not-found.component';\n\nconst appRoutes: Routes = [\n  {\n    path: '',\n    component: ShellComponent,\n    children: [\n      { path: 'welcome', component: WelcomeComponent },\n      {\n        path: 'products',\n        // canActivate: [AuthGuard],\n        loadChildren: () =>\n          import('./products/product.module').then(m => m.ProductModule)\n      },\n      { path: '', redirectTo: 'welcome', pathMatch: 'full' },\n    ]\n  },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"pm-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>\r\n","import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\n// Imports for loading & configuring the in-memory web api\nimport { HttpClientInMemoryWebApiModule } from \"angular-in-memory-web-api\";\nimport { ProductData } from \"./products/product-data\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\n\nimport { AppComponent } from \"./app.component\";\nimport { ShellComponent } from \"./home/shell.component\";\nimport { MenuComponent } from \"./home/menu.component\";\nimport { WelcomeComponent } from \"./home/welcome.component\";\nimport { PageNotFoundComponent } from \"./home/page-not-found.component\";\n\n/* Feature Modules */\nimport { UserModule } from \"./user/user.module\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\nimport { environment } from \"../environments/environment\";\nimport { EffectsModule } from \"@ngrx/effects\";\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    HttpClientInMemoryWebApiModule.forRoot(ProductData),\n    UserModule,\n    AppRoutingModule,\n    StoreModule.forRoot({}, {}),\n    StoreDevtoolsModule.instrument({\n      name: \"APM first manage state project using ngrx\",\n      maxAge: 25,\n      logOnly: environment.production,\n    }),\n    EffectsModule.forRoot([]),\n  ],\n  declarations: [\n    AppComponent,\n    ShellComponent,\n    MenuComponent,\n    WelcomeComponent,\n    PageNotFoundComponent,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../user/auth.service';\n\n@Component({\n  selector: 'pm-menu',\n  templateUrl: './menu.component.html'\n})\nexport class MenuComponent implements OnInit {\n  pageTitle = 'Acme Product Management';\n\n  get isLoggedIn(): boolean {\n    return this.authService.isLoggedIn();\n  }\n\n  get userName(): string {\n    if (this.authService.currentUser) {\n      return this.authService.currentUser.userName;\n    }\n    return '';\n  }\n\n  constructor(private router: Router, private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  logOut(): void {\n    this.authService.logout();\n    this.router.navigate(['/welcome']);\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container-fluid\">\n        <a class=\"navbar-brand\">{{pageTitle}}</a>\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\"\n                routerLinkActive=\"active\">\n                <a class=\"nav-link\"\n                   routerLink='/welcome'>Home</a>\n            </li>\n            <li class=\"nav-item\"\n                routerLinkActive=\"active\">\n                <a class=\"nav-link\"\n                   routerLink='/products'>Product List</a>\n            </li>\n        </ul>\n        <ul class=\"navbar-nav navbar-right\">\n            <li class=\"nav-item\"\n                *ngIf=\"isLoggedIn\">\n                <a class=\"nav-link\"\n                   routerLink='/login'>Welcome {{ userName }}</a>\n            </li>\n            <li class=\"nav-item\"\n                *ngIf=\"!isLoggedIn\">\n                <a class=\"nav-link\"\n                   routerLink='/login'>Log In</a>\n            </li>\n            <li class=\"nav-item\"\n                *ngIf=\"isLoggedIn\">\n                <a class=\"nav-link\"\n                   (click)=\"logOut()\"\n                   style=\"cursor: pointer\">Log Out</a>\n            </li>\n        </ul>\n    </div>\n</nav>","import { Component } from '@angular/core';\n\n@Component({\n    template: `\n    <h1>This is not the page you were looking for!</h1>\n    `\n})\nexport class PageNotFoundComponent { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pm-shell',\n  templateUrl: './shell.component.html',\n  styleUrls: ['./shell.component.css']\n})\nexport class ShellComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<pm-menu></pm-menu>\n\n<div class='container main-content'>\n    <router-outlet></router-outlet>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n    templateUrl: './welcome.component.html'\n})\nexport class WelcomeComponent {\n    public pageTitle = 'Welcome';\n}\n","<div class=\"card\">\n  <div class=\"card-header\">\n    {{ pageTitle }}\n  </div>\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"mx-auto\" style=\"padding-bottom: 20px\">\n        <img\n          src=\"./assets/images/WhatsApp Image 2021-09-16 at 12.31.42 AM.jpeg\"\n          style=\"\n            height: 300px;\n            width: 300px;\n            border-radius: 100%;\n            object-fit: cover;\n          \"\n        />\n      </div>\n    </div>\n    <div class=\"row justify-content-center\">\n      <div class=\"text-center col-md-12\">Developed by:</div>\n      <div class=\"col-4\" style=\"width: 200px\">\n        <h3 class=\"text-center\">Mohamed Eldeeb</h3>\n\n        <div class=\"row justify-content-center\">\n          <a\n            class=\"text-center col-3\"\n            href=\" https://www.linkedin.com/in/mohamed-eldeeb-94a3b11a4/\"\n            target=\"_blanck\"\n            >linkedin</a\n          >\n          <a class=\"text-center col-3\" href=\"https://github.com/M-Hamo\"\n          target=\"_blanck\"\n            >Github</a\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\n\nimport { Product } from './product';\n\nexport class ProductData implements InMemoryDbService {\n\n    createDb() {\n        const products: Product[] = [\n            {\n                id: 1,\n                productName: 'Leaf Rake',\n                productCode: 'GDN-0011',\n                description: 'Leaf rake with 48-inch wooden handle',\n                starRating: 3.2\n            },\n            {\n                id: 2,\n                productName: 'Garden Cart',\n                productCode: 'GDN-0023',\n                description: '15 gallon capacity rolling garden cart',\n                starRating: 4.2\n            },\n            {\n                id: 5,\n                productName: 'Hammer',\n                productCode: 'TBX-0048',\n                description: 'Curved claw steel hammer',\n                starRating: 4.8\n            },\n            {\n                id: 8,\n                productName: 'Saw',\n                productCode: 'TBX-0022',\n                description: '15-inch steel blade hand saw',\n                starRating: 3.7\n            },\n            {\n                id: 10,\n                productName: 'Video Game Controller',\n                productCode: 'GMG-0042',\n                description: 'Standard two-button video game controller',\n                starRating: 4.6\n            }\n        ];\n        return { products };\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\n\nimport { User } from './user';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthService {\n    currentUser: User | null;\n    redirectUrl: string;\n\n    constructor() { }\n\n    isLoggedIn(): boolean {\n        return !!this.currentUser;\n    }\n\n    login(userName: string, password: string): void {\n        // Code here would log into a back end service\n        // and return user information\n        // This is just hard-coded here.\n        this.currentUser = {\n            id: 2,\n            userName,\n            isAdmin: false\n        };\n    }\n\n    logout(): void {\n        this.currentUser = null;\n    }\n}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { Store } from \"@ngrx/store\";\nimport { Observable } from \"rxjs\";\n\nimport { AuthService } from \"./auth.service\";\nimport { getMaskUserName, State } from \"./satate-manager/user.reducer\";\nimport * as UserAction from \"./satate-manager/user.action\";\n\n@Component({\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"],\n})\nexport class LoginComponent implements OnInit {\n  pageTitle = \"Log In\";\n\n  // Declarative abroach\n  maskUserName$: Observable<boolean> = this._store.select(getMaskUserName);\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private _store: Store<State>\n  ) {}\n\n  ngOnInit(): void {}\n\n  cancel(): void {\n    this.router.navigate([\"welcome\"]);\n  }\n\n  checkChanged(): void {\n    this._store.dispatch(UserAction.maskUserName());\n  }\n\n  login(loginForm: NgForm): void {\n    if (loginForm && loginForm.valid) {\n      const userName = loginForm.form.value.userName;\n      const password = loginForm.form.value.password;\n      this.authService.login(userName, password);\n\n      if (this.authService.redirectUrl) {\n        this.router.navigateByUrl(this.authService.redirectUrl);\n      } else {\n        this.router.navigate([\"/products\"]);\n      }\n    }\n  }\n}\n","<div class=\"container main-content\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      {{ pageTitle }}\n    </div>\n\n    <div class=\"card-body\">\n      <form\n        class=\"needs-validation\"\n        novalidate\n        (ngSubmit)=\"login(loginForm)\"\n        #loginForm=\"ngForm\"\n        autocomplete=\"off\"\n      >\n        <fieldset>\n          <div class=\"form-group row\">\n            <label class=\"col-md-2 col-form-label\" for=\"userNameId\"\n              >User Name</label\n            >\n            <div class=\"col-md-8\">\n              <input\n                class=\"form-control\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    (userNameVar.touched || userNameVar.dirty) &&\n                    !userNameVar.valid\n                }\"\n                id=\"userNameId\"\n                [type]=\"(maskUserName$ | async) ? 'password' : 'text'\"\n                placeholder=\"User Name (required)\"\n                required\n                ngModel\n                name=\"userName\"\n                #userNameVar=\"ngModel\"\n              />\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"\n                  (userNameVar.touched || userNameVar.dirty) &&\n                  passwordVar.hasError('required')\n                \"\n              >\n                User name is required.\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label class=\"col-md-2 col-form-label\" for=\"passwordId\"\n              >Password</label\n            >\n            <div class=\"col-md-8\">\n              <input\n                class=\"form-control\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    (passwordVar.touched || passwordVar.dirty) &&\n                    !passwordVar.valid\n                }\"\n                id=\"passwordId\"\n                type=\"password\"\n                placeholder=\"Password (required)\"\n                required\n                ngModel\n                name=\"password\"\n                #passwordVar=\"ngModel\"\n              />\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"\n                  (passwordVar.touched || passwordVar.dirty) &&\n                  passwordVar.hasError('required')\n                \"\n              >\n                Password is required.\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <div class=\"col-md-4 col-md-offset-2\">\n              <span>\n                <button\n                  class=\"btn btn-primary\"\n                  type=\"submit\"\n                  style=\"width: 80px; margin-right: 10px\"\n                  [disabled]=\"!loginForm.valid\"\n                >\n                  Log In\n                </button>\n              </span>\n              <span>\n                <a class=\"btn btn-light\" (click)=\"cancel()\"> Cancel </a>\n              </span>\n            </div>\n          </div>\n        </fieldset>\n      </form>\n    </div>\n\n    <div class=\"card-footer\">\n      <div class=\"row\">\n        <div class=\"form-check col-md-7\">\n          <label>\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              (change)=\"checkChanged()\"\n              [checked]=\"maskUserName$ | async\"\n            />\n            Mask user name\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { createAction } from \"@ngrx/store\";\r\n\r\nexport const maskUserName = createAction(\"[User] MaskUserName\");\r\n","import {\r\n  createAction,\r\n  createFeatureSelector,\r\n  createReducer,\r\n  createSelector,\r\n  on,\r\n} from \"@ngrx/store\";\r\nimport * as AppState from \"../../app.state\";\r\nimport * as UserAction from \"./user.action\";\r\n\r\nexport interface State extends AppState.State {\r\n  users: UserState;\r\n}\r\n\r\ninterface UserState {\r\n  maskUserName: boolean;\r\n}\r\n\r\nconst initialState: UserState = {\r\n  maskUserName: false,\r\n};\r\n\r\nconst getUsersFeatureState = createFeatureSelector<UserState>(\"users\");\r\n\r\nexport const getMaskUserName = createSelector(\r\n  getUsersFeatureState,\r\n  (state) => state.maskUserName\r\n);\r\n\r\nexport const userReducer = createReducer(\r\n  initialState,\r\n  on(UserAction.maskUserName, (state) => {\r\n    return {\r\n      ...state,\r\n      maskUserName: !state.maskUserName,\r\n    };\r\n  })\r\n);\r\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { StoreModule } from \"@ngrx/store\";\n\nimport { SharedModule } from \"../shared/shared.module\";\n\nimport { LoginComponent } from \"./login.component\";\nimport { userReducer } from \"./satate-manager/user.reducer\";\n\nconst userRoutes: Routes = [{ path: \"login\", component: LoginComponent }];\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(userRoutes),\n    StoreModule.forFeature(\"users\", userReducer),\n  ],\n  declarations: [LoginComponent],\n})\nexport class UserModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}