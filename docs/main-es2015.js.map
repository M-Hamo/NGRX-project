{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/home/menu.component.ts","./src/app/home/menu.component.html","./src/app/home/page-not-found.component.ts","./src/app/home/shell.component.ts","./src/app/home/shell.component.html","./src/app/home/welcome.component.ts","./src/app/home/welcome.component.html","./src/app/products/product-data.ts","./src/app/shared/shared.module.ts","./src/app/user/auth.service.ts","./src/app/user/login.component.ts","./src/app/user/login.component.html","./src/app/user/satate-manager/user.action.ts","./src/app/user/satate-manager/user.reducer.ts","./src/app/user/user.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAIC;AACI;AACY;;;AAExE,MAAM,SAAS,GAAW;IACxB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oEAAc;QACzB,QAAQ,EAAE;YACR,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,wEAAgB,EAAE;YAChD;gBACE,IAAI,EAAE,UAAU;gBAChB,4BAA4B;gBAC5B,YAAY,EAAE,GAAG,EAAE,CACjB,wMAAmC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC;aACjE;YACD,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE;SACvD;KACF;IACD,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,oFAAqB,EAAE;CACjD,CAAC;AAQK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBALlB;YACP,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;SAChC;QACS,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAN5B,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,4DAAY,CAAC,OAAO,CAAC,SAAS,CAAC;iBAChC;gBACD,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;AChCD;AAAA;AAAA;AAAA;AAA0C;;;AAOnC,MAAM,YAAY;;wEAAZ,YAAY;4FAAZ,YAAY;QCPzB,2EAA+B;;6FDOlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACiB;AACF;AAExD,0DAA0D;AACiB;AACrB;AAEE;AAET;AACS;AACF;AACM;AACY;AAExE,qBAAqB;AAC2B;AACN;AACiB;AACD;AACZ;;;;;;AA0BvC,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,kBAvBX;YACP,uEAAa;YACb,qEAAgB;YAChB,wFAA8B,CAAC,OAAO,CAAC,kEAAW,CAAC;YACnD,6DAAU;YACV,oEAAgB;YAChB,wDAAW,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC;YAC3B,yEAAmB,CAAC,UAAU,CAAC;gBAC7B,IAAI,EAAE,2CAA2C;gBACjD,MAAM,EAAE,EAAE;gBACV,OAAO,EAAE,sEAAW,CAAC,UAAU;aAChC,CAAC;YACF,4DAAa,CAAC,OAAO,CAAC,EAAE,CAAC;SAC1B;mIAUU,SAAS,mBARlB,2DAAY;QACZ,oEAAc;QACd,kEAAa;QACb,wEAAgB;QAChB,qFAAqB,aAlBrB,uEAAa;QACb,qEAAgB,4FAEhB,6DAAU;QACV,oEAAgB;6FAkBP,SAAS;cAxBrB,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,uEAAa;oBACb,qEAAgB;oBAChB,wFAA8B,CAAC,OAAO,CAAC,kEAAW,CAAC;oBACnD,6DAAU;oBACV,oEAAgB;oBAChB,wDAAW,CAAC,OAAO,CAAC,EAAE,EAAE,EAAE,CAAC;oBAC3B,yEAAmB,CAAC,UAAU,CAAC;wBAC7B,IAAI,EAAE,2CAA2C;wBACjD,MAAM,EAAE,EAAE;wBACV,OAAO,EAAE,sEAAW,CAAC,UAAU;qBAChC,CAAC;oBACF,4DAAa,CAAC,OAAO,CAAC,EAAE,CAAC;iBAC1B;gBACD,YAAY,EAAE;oBACZ,2DAAY;oBACZ,oEAAc;oBACd,kEAAa;oBACb,wEAAgB;oBAChB,qFAAqB;iBACtB;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;AC9CD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;;;ICgBtC,wEAEI;IAAA,wEACuB;IAAA,uDAAsB;IAAA,4DAAI;IACrD,4DAAK;;;IADsB,0DAAsB;IAAtB,iGAAsB;;;IAEjD,wEAEI;IAAA,wEACuB;IAAA,iEAAM;IAAA,4DAAI;IACrC,4DAAK;;;;IACL,wEAEI;IAAA,wEAE2B;IADxB,ySAAkB;IACM,kEAAO;IAAA,4DAAI;IAC1C,4DAAK;;ADtBV,MAAM,aAAa;IAcxB,YAAoB,MAAc,EAAU,WAAwB;QAAhD,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QAbpE,cAAS,GAAG,yBAAyB,CAAC;IAakC,CAAC;IAXzE,IAAI,UAAU;QACZ,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,CAAC;IACvC,CAAC;IAED,IAAI,QAAQ;QACV,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;YAChC,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC;SAC9C;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAID,QAAQ;IACR,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC;;0EAtBU,aAAa;6FAAb,aAAa;QCT1B,yEACI;QAAA,yEACI;QAAA,uEAAwB;QAAA,uDAAa;QAAA,4DAAI;QACzC,wEACI;QAAA,wEAEI;QAAA,uEACyB;QAAA,+DAAI;QAAA,4DAAI;QACrC,4DAAK;QACL,wEAEI;QAAA,uEAC0B;QAAA,wEAAY;QAAA,4DAAI;QAC9C,4DAAK;QACT,4DAAK;QACL,yEACI;QAAA,yGAEI;QAGJ,yGAEI;QAGJ,yGAEI;QAIR,4DAAK;QACT,4DAAM;QACV,4DAAM;;QAhC0B,0DAAa;QAAb,8EAAa;QAe7B,0DAAkB;QAAlB,gFAAkB;QAKlB,0DAAmB;QAAnB,iFAAmB;QAKnB,0DAAkB;QAAlB,gFAAkB;;6FDlBrB,aAAa;cAJzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,SAAS;gBACnB,WAAW,EAAE,uBAAuB;aACrC;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAA0C;;AAOnC,MAAM,qBAAqB;;0FAArB,qBAAqB;qGAArB,qBAAqB;QAH9B,qEAAI;QAAA,qGAA0C;QAAA,4DAAK;;6FAG1C,qBAAqB;cALjC,uDAAS;eAAC;gBACP,QAAQ,EAAE;;KAET;aACJ;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAkD;;;;AAO3C,MAAM,cAAc;IAEzB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;4EALU,cAAc;8FAAd,cAAc;QCP3B,qEAAmB;QAEnB,yEACI;QAAA,2EAA+B;QACnC,4DAAM;;6FDGO,cAAc;cAL1B,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAA0C;;AAKnC,MAAM,gBAAgB;IAH7B;QAIW,cAAS,GAAG,SAAS,CAAC;KAChC;;gFAFY,gBAAgB;gGAAhB,gBAAgB;QCL7B,yEACE;QAAA,yEACE;QAAA,uDACF;QAAA,4DAAM;QACN,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,oEASF;QAAA,4DAAM;QACR,4DAAM;QACN,yEACE;QAAA,yEAAmC;QAAA,wEAAa;QAAA,4DAAM;QACtD,0EACE;QAAA,yEAAwB;QAAA,0EAAc;QAAA,4DAAK;QAE3C,0EACE;QAAA,yEAIG;QAAA,oEAAQ;QAAA,4DACV;QACD,yEAEG;QAAA,kEAAM;QAAA,4DACR;QACH,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;QApCF,0DACF;QADE,yFACF;;6FDEW,gBAAgB;cAH5B,uDAAS;eAAC;gBACP,WAAW,EAAE,0BAA0B;aAC1C;;;;;;;;;;;;;;AEAD;AAAA;AAAO,MAAM,WAAW;IAEpB,QAAQ;QACJ,MAAM,QAAQ,GAAc;YACxB;gBACI,EAAE,EAAE,CAAC;gBACL,WAAW,EAAE,WAAW;gBACxB,WAAW,EAAE,UAAU;gBACvB,WAAW,EAAE,sCAAsC;gBACnD,UAAU,EAAE,GAAG;aAClB;YACD;gBACI,EAAE,EAAE,CAAC;gBACL,WAAW,EAAE,aAAa;gBAC1B,WAAW,EAAE,UAAU;gBACvB,WAAW,EAAE,wCAAwC;gBACrD,UAAU,EAAE,GAAG;aAClB;YACD;gBACI,EAAE,EAAE,CAAC;gBACL,WAAW,EAAE,QAAQ;gBACrB,WAAW,EAAE,UAAU;gBACvB,WAAW,EAAE,0BAA0B;gBACvC,UAAU,EAAE,GAAG;aAClB;YACD;gBACI,EAAE,EAAE,CAAC;gBACL,WAAW,EAAE,KAAK;gBAClB,WAAW,EAAE,UAAU;gBACvB,WAAW,EAAE,8BAA8B;gBAC3C,UAAU,EAAE,GAAG;aAClB;YACD;gBACI,EAAE,EAAE,EAAE;gBACN,WAAW,EAAE,uBAAuB;gBACpC,WAAW,EAAE,UAAU;gBACvB,WAAW,EAAE,2CAA2C;gBACxD,UAAU,EAAE,GAAG;aAClB;SACJ,CAAC;QACF,OAAO,EAAE,QAAQ,EAAE,CAAC;IACxB,CAAC;CACJ;;;;;;;;;;;;;AC9CD;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACmB;;AAY3D,MAAM,YAAY;;2FAAZ,YAAY;kJAAZ,YAAY,kBATd;YACP,4DAAY;SACb;QAEC,4DAAY;QACZ,0DAAW;QACX,kEAAmB;mIAGV,YAAY,cARrB,4DAAY,aAGZ,4DAAY;QACZ,0DAAW;QACX,kEAAmB;6FAGV,YAAY;cAVxB,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,4DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,0DAAW;oBACX,kEAAmB;iBACpB;aACF;;;;;;;;;;;;;;ACbD;AAAA;AAAA;AAA2C;;AAOpC,MAAM,WAAW;IAIpB,gBAAgB,CAAC;IAEjB,UAAU;QACN,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC;IAC9B,CAAC;IAED,KAAK,CAAC,QAAgB,EAAE,QAAgB;QACpC,8CAA8C;QAC9C,8BAA8B;QAC9B,gCAAgC;QAChC,IAAI,CAAC,WAAW,GAAG;YACf,EAAE,EAAE,CAAC;YACL,QAAQ;YACR,OAAO,EAAE,KAAK;SACjB,CAAC;IACN,CAAC;IAED,MAAM;QACF,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC5B,CAAC;;sEAvBQ,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFR,MAAM;6FAET,WAAW;cAHvB,wDAAU;eAAC;gBACR,UAAU,EAAE,MAAM;aACrB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAOU;AACZ;;;;;;;;IC2B7C,0EAOE;IAAA,mFACF;IAAA,4DAAM;;;IAwBN,0EAOE;IAAA,kFACF;IAAA,4DAAM;;;AD7Db,MAAM,cAAc;IAMzB,YACU,WAAwB,EACxB,MAAc,EACd,MAAoB;QAFpB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,WAAM,GAAN,MAAM,CAAc;QAR9B,cAAS,GAAG,QAAQ,CAAC;QAErB,sBAAsB;QACtB,kBAAa,GAAwB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,4EAAe,CAAC,CAAC;IAMtE,CAAC;IAEJ,QAAQ,KAAU,CAAC;IAEnB,MAAM;QACJ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,YAAY;QACV,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,wEAAuB,EAAE,CAAC,CAAC;IAClD,CAAC;IAED,KAAK,CAAC,SAAiB;QACrB,IAAI,SAAS,IAAI,SAAS,CAAC,KAAK,EAAE;YAChC,MAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC/C,MAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YAC/C,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAE3C,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;gBAChC,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;aACzD;iBAAM;gBACL,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;aACrC;SACF;IACH,CAAC;;4EAlCU,cAAc;8FAAd,cAAc;;QCd3B,yEACE;QAAA,yEACE;QAAA,yEACE;QAAA,uDACF;QAAA,4DAAM;QAEN,yEACE;QAAA,6EAOE;QAJA,sRAAY,cAAgB,IAAC;QAI7B,2EACE;QAAA,yEACE;QAAA,2EACG;QAAA,qEAAS;QAAA,4DACX;QACD,0EACE;QAAA,2EAeA;;QAAA,6GAOE;QAEJ,4DAAM;QACR,4DAAM;QAEN,0EACE;QAAA,6EACG;QAAA,oEAAQ;QAAA,4DACV;QACD,0EACE;QAAA,4EAeA;QAAA,6GAOE;QAEJ,4DAAM;QACR,4DAAM;QAEN,2EACE;QAAA,2EACE;QAAA,wEACE;QAAA,8EAME;QAAA,oEACF;QAAA,4DAAS;QACX,4DAAO;QACP,wEACE;QAAA,yEAA6C;QAApB,kIAAS,YAAQ,IAAC;QAAE,oEAAO;QAAA,4DAAI;QAC1D,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAW;QACb,4DAAO;QACT,4DAAM;QAEN,2EACE;QAAA,2EACE;QAAA,2EACE;QAAA,yEACE;QAAA,6EAMA;QAHE,wIAAU,kBAAc,IAAC;;QAH3B,4DAMA;QAAA,4EACF;QAAA,4DAAQ;QACV,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;;;;QAjHA,0DACF;QADE,yFACF;QAkBY,0DAIE;QAJF,qLAIE;QAWF,0DAGC;QAHD,wHAGC;QAcD,0DAIE;QAJF,qLAIE;QAWF,0DAGC;QAHD,wHAGC;QAcC,0DAA6B;QAA7B,gFAA6B;QAsBjC,0DAAiC;QAAjC,yJAAiC;;6FD9FlC,cAAc;cAJ1B,uDAAS;eAAC;gBACT,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;aACrC;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAA2C;AAEpC,MAAM,YAAY,GAAG,gEAAY,CAAC,qBAAqB,CAAC,CAAC;;;;;;;;;;;;;ACFhE;AAAA;AAAA;AAAA;AAAA;AAMqB;AAEuB;AAU5C,MAAM,YAAY,GAAc;IAC9B,YAAY,EAAE,KAAK;CACpB,CAAC;AAEF,MAAM,oBAAoB,GAAG,yEAAqB,CAAY,OAAO,CAAC,CAAC;AAEhE,MAAM,eAAe,GAAG,kEAAc,CAC3C,oBAAoB,EACpB,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,YAAY,CAC9B,CAAC;AAEK,MAAM,WAAW,GAAG,iEAAa,CACtC,YAAY,EACZ,sDAAE,CAAC,yDAAuB,EAAE,CAAC,KAAK,EAAE,EAAE;IACpC,uCACK,KAAK,KACR,YAAY,EAAE,CAAC,KAAK,CAAC,YAAY,IACjC;AACJ,CAAC,CAAC,CACH,CAAC;;;;;;;;;;;;;ACrCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AACb;AAEa;AAEJ;AACS;;;;AAE5D,MAAM,UAAU,GAAW,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,+DAAc,EAAE,CAAC,CAAC;AAUnE,MAAM,UAAU;;yFAAV,UAAU;8IAAV,UAAU,kBAPZ;YACP,kEAAY;YACZ,4DAAY,CAAC,QAAQ,CAAC,UAAU,CAAC;YACjC,uDAAW,CAAC,UAAU,CAAC,OAAO,EAAE,wEAAW,CAAC;SAC7C;mIAGU,UAAU,mBAFN,+DAAc,aAJ3B,kEAAY;6FAMH,UAAU;cARtB,sDAAQ;eAAC;gBACR,OAAO,EAAE;oBACP,kEAAY;oBACZ,4DAAY,CAAC,QAAQ,CAAC,UAAU,CAAC;oBACjC,uDAAW,CAAC,UAAU,CAAC,OAAO,EAAE,wEAAW,CAAC;iBAC7C;gBACD,YAAY,EAAE,CAAC,+DAAc,CAAC;aAC/B;;;;;;;;;;;;;;AClBD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthGuard } from './user/auth-guard.service';\n\nimport { ShellComponent } from './home/shell.component';\nimport { WelcomeComponent } from './home/welcome.component';\nimport { PageNotFoundComponent } from './home/page-not-found.component';\n\nconst appRoutes: Routes = [\n  {\n    path: '',\n    component: ShellComponent,\n    children: [\n      { path: 'welcome', component: WelcomeComponent },\n      {\n        path: 'products',\n        // canActivate: [AuthGuard],\n        loadChildren: () =>\n          import('./products/product.module').then(m => m.ProductModule)\n      },\n      { path: '', redirectTo: 'welcome', pathMatch: 'full' },\n    ]\n  },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoutes)\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"pm-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"],\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>\r\n","import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\n// Imports for loading & configuring the in-memory web api\nimport { HttpClientInMemoryWebApiModule } from \"angular-in-memory-web-api\";\nimport { ProductData } from \"./products/product-data\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\n\nimport { AppComponent } from \"./app.component\";\nimport { ShellComponent } from \"./home/shell.component\";\nimport { MenuComponent } from \"./home/menu.component\";\nimport { WelcomeComponent } from \"./home/welcome.component\";\nimport { PageNotFoundComponent } from \"./home/page-not-found.component\";\n\n/* Feature Modules */\nimport { UserModule } from \"./user/user.module\";\nimport { StoreModule } from \"@ngrx/store\";\nimport { StoreDevtoolsModule } from \"@ngrx/store-devtools\";\nimport { environment } from \"../environments/environment\";\nimport { EffectsModule } from \"@ngrx/effects\";\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    HttpClientInMemoryWebApiModule.forRoot(ProductData),\n    UserModule,\n    AppRoutingModule,\n    StoreModule.forRoot({}, {}),\n    StoreDevtoolsModule.instrument({\n      name: \"APM first manage state project using ngrx\",\n      maxAge: 25,\n      logOnly: environment.production,\n    }),\n    EffectsModule.forRoot([]),\n  ],\n  declarations: [\n    AppComponent,\n    ShellComponent,\n    MenuComponent,\n    WelcomeComponent,\n    PageNotFoundComponent,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from '../user/auth.service';\n\n@Component({\n  selector: 'pm-menu',\n  templateUrl: './menu.component.html'\n})\nexport class MenuComponent implements OnInit {\n  pageTitle = 'Acme Product Management';\n\n  get isLoggedIn(): boolean {\n    return this.authService.isLoggedIn();\n  }\n\n  get userName(): string {\n    if (this.authService.currentUser) {\n      return this.authService.currentUser.userName;\n    }\n    return '';\n  }\n\n  constructor(private router: Router, private authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  logOut(): void {\n    this.authService.logout();\n    this.router.navigate(['/welcome']);\n  }\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container-fluid\">\n        <a class=\"navbar-brand\">{{pageTitle}}</a>\n        <ul class=\"navbar-nav mr-auto\">\n            <li class=\"nav-item\"\n                routerLinkActive=\"active\">\n                <a class=\"nav-link\"\n                   routerLink='/welcome'>Home</a>\n            </li>\n            <li class=\"nav-item\"\n                routerLinkActive=\"active\">\n                <a class=\"nav-link\"\n                   routerLink='/products'>Product List</a>\n            </li>\n        </ul>\n        <ul class=\"navbar-nav navbar-right\">\n            <li class=\"nav-item\"\n                *ngIf=\"isLoggedIn\">\n                <a class=\"nav-link\"\n                   routerLink='/login'>Welcome {{ userName }}</a>\n            </li>\n            <li class=\"nav-item\"\n                *ngIf=\"!isLoggedIn\">\n                <a class=\"nav-link\"\n                   routerLink='/login'>Log In</a>\n            </li>\n            <li class=\"nav-item\"\n                *ngIf=\"isLoggedIn\">\n                <a class=\"nav-link\"\n                   (click)=\"logOut()\"\n                   style=\"cursor: pointer\">Log Out</a>\n            </li>\n        </ul>\n    </div>\n</nav>","import { Component } from '@angular/core';\n\n@Component({\n    template: `\n    <h1>This is not the page you were looking for!</h1>\n    `\n})\nexport class PageNotFoundComponent { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pm-shell',\n  templateUrl: './shell.component.html',\n  styleUrls: ['./shell.component.css']\n})\nexport class ShellComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<pm-menu></pm-menu>\n\n<div class='container main-content'>\n    <router-outlet></router-outlet>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n    templateUrl: './welcome.component.html'\n})\nexport class WelcomeComponent {\n    public pageTitle = 'Welcome';\n}\n","<div class=\"card\">\n  <div class=\"card-header\">\n    {{ pageTitle }}\n  </div>\n  <div class=\"card-body\">\n    <div class=\"row\">\n      <div class=\"mx-auto\" style=\"padding-bottom: 20px\">\n        <img\n          src=\"./assets/images/WhatsApp Image 2021-09-16 at 12.31.42 AM.jpeg\"\n          style=\"\n            height: 300px;\n            width: 300px;\n            border-radius: 100%;\n            object-fit: cover;\n          \"\n        />\n      </div>\n    </div>\n    <div class=\"row justify-content-center\">\n      <div class=\"text-center col-md-12\">Developed by:</div>\n      <div class=\"col-4\" style=\"width: 200px\">\n        <h3 class=\"text-center\">Mohamed Eldeeb</h3>\n\n        <div class=\"row justify-content-center\">\n          <a\n            class=\"text-center col-3\"\n            href=\" https://www.linkedin.com/in/mohamed-eldeeb-94a3b11a4/\"\n            target=\"_blanck\"\n            >linkedin</a\n          >\n          <a class=\"text-center col-3\" href=\"https://github.com/M-Hamo\"\n          target=\"_blanck\"\n            >Github</a\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { InMemoryDbService } from 'angular-in-memory-web-api';\n\nimport { Product } from './product';\n\nexport class ProductData implements InMemoryDbService {\n\n    createDb() {\n        const products: Product[] = [\n            {\n                id: 1,\n                productName: 'Leaf Rake',\n                productCode: 'GDN-0011',\n                description: 'Leaf rake with 48-inch wooden handle',\n                starRating: 3.2\n            },\n            {\n                id: 2,\n                productName: 'Garden Cart',\n                productCode: 'GDN-0023',\n                description: '15 gallon capacity rolling garden cart',\n                starRating: 4.2\n            },\n            {\n                id: 5,\n                productName: 'Hammer',\n                productCode: 'TBX-0048',\n                description: 'Curved claw steel hammer',\n                starRating: 4.8\n            },\n            {\n                id: 8,\n                productName: 'Saw',\n                productCode: 'TBX-0022',\n                description: '15-inch steel blade hand saw',\n                starRating: 3.7\n            },\n            {\n                id: 10,\n                productName: 'Video Game Controller',\n                productCode: 'GMG-0042',\n                description: 'Standard two-button video game controller',\n                starRating: 4.6\n            }\n        ];\n        return { products };\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\n\nimport { User } from './user';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class AuthService {\n    currentUser: User | null;\n    redirectUrl: string;\n\n    constructor() { }\n\n    isLoggedIn(): boolean {\n        return !!this.currentUser;\n    }\n\n    login(userName: string, password: string): void {\n        // Code here would log into a back end service\n        // and return user information\n        // This is just hard-coded here.\n        this.currentUser = {\n            id: 2,\n            userName,\n            isAdmin: false\n        };\n    }\n\n    logout(): void {\n        this.currentUser = null;\n    }\n}\n","import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { NgForm } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { Store } from \"@ngrx/store\";\nimport { Observable } from \"rxjs\";\n\nimport { AuthService } from \"./auth.service\";\nimport { getMaskUserName, State } from \"./satate-manager/user.reducer\";\nimport * as UserAction from \"./satate-manager/user.action\";\n\n@Component({\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.css\"],\n})\nexport class LoginComponent implements OnInit {\n  pageTitle = \"Log In\";\n\n  // Declarative abroach\n  maskUserName$: Observable<boolean> = this._store.select(getMaskUserName);\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private _store: Store<State>\n  ) {}\n\n  ngOnInit(): void {}\n\n  cancel(): void {\n    this.router.navigate([\"welcome\"]);\n  }\n\n  checkChanged(): void {\n    this._store.dispatch(UserAction.maskUserName());\n  }\n\n  login(loginForm: NgForm): void {\n    if (loginForm && loginForm.valid) {\n      const userName = loginForm.form.value.userName;\n      const password = loginForm.form.value.password;\n      this.authService.login(userName, password);\n\n      if (this.authService.redirectUrl) {\n        this.router.navigateByUrl(this.authService.redirectUrl);\n      } else {\n        this.router.navigate([\"/products\"]);\n      }\n    }\n  }\n}\n","<div class=\"container main-content\">\n  <div class=\"card\">\n    <div class=\"card-header\">\n      {{ pageTitle }}\n    </div>\n\n    <div class=\"card-body\">\n      <form\n        class=\"needs-validation\"\n        novalidate\n        (ngSubmit)=\"login(loginForm)\"\n        #loginForm=\"ngForm\"\n        autocomplete=\"off\"\n      >\n        <fieldset>\n          <div class=\"form-group row\">\n            <label class=\"col-md-2 col-form-label\" for=\"userNameId\"\n              >User Name</label\n            >\n            <div class=\"col-md-8\">\n              <input\n                class=\"form-control\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    (userNameVar.touched || userNameVar.dirty) &&\n                    !userNameVar.valid\n                }\"\n                id=\"userNameId\"\n                [type]=\"(maskUserName$ | async) ? 'password' : 'text'\"\n                placeholder=\"User Name (required)\"\n                required\n                ngModel\n                name=\"userName\"\n                #userNameVar=\"ngModel\"\n              />\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"\n                  (userNameVar.touched || userNameVar.dirty) &&\n                  passwordVar.hasError('required')\n                \"\n              >\n                User name is required.\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group row\">\n            <label class=\"col-md-2 col-form-label\" for=\"passwordId\"\n              >Password</label\n            >\n            <div class=\"col-md-8\">\n              <input\n                class=\"form-control\"\n                [ngClass]=\"{\n                  'is-invalid':\n                    (passwordVar.touched || passwordVar.dirty) &&\n                    !passwordVar.valid\n                }\"\n                id=\"passwordId\"\n                type=\"password\"\n                placeholder=\"Password (required)\"\n                required\n                ngModel\n                name=\"password\"\n                #passwordVar=\"ngModel\"\n              />\n              <div\n                class=\"invalid-feedback\"\n                *ngIf=\"\n                  (passwordVar.touched || passwordVar.dirty) &&\n                  passwordVar.hasError('required')\n                \"\n              >\n                Password is required.\n              </div>\n            </div>\n          </div>\n\n          <div class=\"form-group\">\n            <div class=\"col-md-4 col-md-offset-2\">\n              <span>\n                <button\n                  class=\"btn btn-primary\"\n                  type=\"submit\"\n                  style=\"width: 80px; margin-right: 10px\"\n                  [disabled]=\"!loginForm.valid\"\n                >\n                  Log In\n                </button>\n              </span>\n              <span>\n                <a class=\"btn btn-light\" (click)=\"cancel()\"> Cancel </a>\n              </span>\n            </div>\n          </div>\n        </fieldset>\n      </form>\n    </div>\n\n    <div class=\"card-footer\">\n      <div class=\"row\">\n        <div class=\"form-check col-md-7\">\n          <label>\n            <input\n              class=\"form-check-input\"\n              type=\"checkbox\"\n              (change)=\"checkChanged()\"\n              [checked]=\"maskUserName$ | async\"\n            />\n            Mask user name\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { createAction } from \"@ngrx/store\";\r\n\r\nexport const maskUserName = createAction(\"[User] MaskUserName\");\r\n","import {\r\n  createAction,\r\n  createFeatureSelector,\r\n  createReducer,\r\n  createSelector,\r\n  on,\r\n} from \"@ngrx/store\";\r\nimport * as AppState from \"../../app.state\";\r\nimport * as UserAction from \"./user.action\";\r\n\r\nexport interface State extends AppState.State {\r\n  users: UserState;\r\n}\r\n\r\ninterface UserState {\r\n  maskUserName: boolean;\r\n}\r\n\r\nconst initialState: UserState = {\r\n  maskUserName: false,\r\n};\r\n\r\nconst getUsersFeatureState = createFeatureSelector<UserState>(\"users\");\r\n\r\nexport const getMaskUserName = createSelector(\r\n  getUsersFeatureState,\r\n  (state) => state.maskUserName\r\n);\r\n\r\nexport const userReducer = createReducer(\r\n  initialState,\r\n  on(UserAction.maskUserName, (state) => {\r\n    return {\r\n      ...state,\r\n      maskUserName: !state.maskUserName,\r\n    };\r\n  })\r\n);\r\n","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { StoreModule } from \"@ngrx/store\";\n\nimport { SharedModule } from \"../shared/shared.module\";\n\nimport { LoginComponent } from \"./login.component\";\nimport { userReducer } from \"./satate-manager/user.reducer\";\n\nconst userRoutes: Routes = [{ path: \"login\", component: LoginComponent }];\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild(userRoutes),\n    StoreModule.forFeature(\"users\", userReducer),\n  ],\n  declarations: [LoginComponent],\n})\nexport class UserModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}